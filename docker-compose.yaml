networks:
  internal:
    driver: bridge
    name: internal

services:
  ollama:
    container_name: ollama
    image: ollama/ollama:latest
    volumes:
      - ./ollama:/root/.ollama
    pull_policy: always
    tty: true
    restart: unless-stopped
    networks:
      - internal
#    deploy:
#      resources:
#        reservations:
#          devices:
#            - driver: nvidia
#              count: 1
#              capabilities: [gpu]

  open-webui:
    container_name: open-webui
    image: ghcr.io/open-webui/open-webui:main
    volumes:
      - ./open-webui:/app/backend/data
    depends_on:
      - ollama
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - WEBUI_AUTH=false
      - WEBUI_URL=https://ai.linuxcloudhacks.ovh
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: unless-stopped
    networks:
      - internal

  oauth2-proxy:
    container_name: oauth2-proxy
    image: quay.io/oauth2-proxy/oauth2-proxy:latest
    volumes:
      - ./auth-emails:/auth-emails:ro
    environment:
      OAUTH2_PROXY_PROVIDER: "google"
      OAUTH2_PROXY_CLIENT_ID: "PUT YOUR CLIENT ID HERE"
      OAUTH2_PROXY_CLIENT_SECRET: "PUT YOUR CLIENT SECRET HERE"
      OAUTH2_PROXY_SCOPE: "openid profile email"
      OAUTH2_PROXY_HTTP_ADDRESS: "0.0.0.0:4180"
      OAUTH2_PROXY_UPSTREAM: "http://open-webui:8080"
      OAUTH2_PROXY_REDIRECT_URL: "https://ai.linuxcloudhacks.ovh/oauth2/callback"
      OAUTH2_PROXY_COOKIE_SECRET: "GNGaQJmWUexmwiJDLd6d2NLDNJ8rxcwJ7eCubb5USU0="
      OAUTH2_PROXY_COOKIE_SECURE: "false"
      OAUTH2_PROXY_SET_XAUTHREQUEST: "true"
      OAUTH2_PROXY_REVERSE_PROXY: "true"
      OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: "true"
      OAUTH2_PROXY_AUTHENTICATED_EMAILS_FILE: /auth-emails

    restart: unless-stopped
    networks:
      - internal

  nginx:
    container_name: nginx
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - oauth2-proxy
      - open-webui
    restart: unless-stopped
    networks:
      - internal

  caddy:
    container_name: caddy
    image: caddy:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./caddy_data:/data
      - ./caddy_config:/config
    depends_on:
      - nginx
    restart: unless-stopped
    networks:
      - internal
